// build time:Tue Apr 21 2020 13:57:40 GMT+0800 (GMT+08:00)
(function(t){if(typeof exports=="object"&&typeof module=="object")t(require("../../lib/codemirror"),require("./searchcursor"),require("../scroll/annotatescrollbar"));else if(typeof define=="function"&&define.amd)define(["../../lib/codemirror","./searchcursor","../scroll/annotatescrollbar"],t);else t(CodeMirror)})(function(t){"use strict";t.defineExtension("showMatchesOnScrollbar",function(t,i,a){if(typeof a=="string")a={className:a};if(!a)a={};return new e(this,t,i,a)});function e(t,e,i,a){this.cm=t;var o={listenForChanges:false};for(var r in a)o[r]=a[r];if(!o.className)o.className="CodeMirror-search-match";this.annotation=t.annotateScrollbar(o);this.query=e;this.caseFold=i;this.gap={from:t.firstLine(),to:t.lastLine()+1};this.matches=[];this.update=null;this.findMatches();this.annotation.update(this.matches);var n=this;t.on("change",this.changeHandler=function(t,e){n.onChange(e)})}var i=1e3;e.prototype.findMatches=function(){if(!this.gap)return;for(var e=0;e<this.matches.length;e++){var a=this.matches[e];if(a.from.line>=this.gap.to)break;if(a.to.line>=this.gap.from)this.matches.splice(e--,1)}var o=this.cm.getSearchCursor(this.query,t.Pos(this.gap.from,0),this.caseFold);while(o.findNext()){var a={from:o.from(),to:o.to()};if(a.from.line>=this.gap.to)break;this.matches.splice(e++,0,a);if(this.matches.length>i)break}this.gap=null};function a(t,e,i){if(t<=e)return t;return Math.max(e,t+i)}e.prototype.onChange=function(e){var i=e.from.line;var o=t.changeEnd(e).line;var r=o-e.to.line;if(this.gap){this.gap.from=Math.min(a(this.gap.from,i,r),e.from.line);this.gap.to=Math.max(a(this.gap.to,i,r),e.from.line)}else{this.gap={from:e.from.line,to:o+1}}if(r)for(var n=0;n<this.matches.length;n++){var s=this.matches[n];var h=a(s.from.line,i,r);if(h!=s.from.line)s.from=t.Pos(h,s.from.ch);var f=a(s.to.line,i,r);if(f!=s.to.line)s.to=t.Pos(f,s.to.ch)}clearTimeout(this.update);var c=this;this.update=setTimeout(function(){c.updateAfterChange()},250)};e.prototype.updateAfterChange=function(){this.findMatches();this.annotation.update(this.matches)};e.prototype.clear=function(){this.cm.off("change",this.changeHandler);this.annotation.clear()}});
//rebuild by neat 