{"meta":{"title":"天镜云生","subtitle":"Welcome !","description":"心静思远，志行千里。","author":"TJYS","url":"https://qikaile.tk","root":"/"},"pages":[{"title":"","date":"2020-03-14T06:34:24.653Z","updated":"2020-03-14T06:34:24.653Z","comments":true,"path":"404.html","permalink":"https://qikaile.tk/404.html","excerpt":"","text":"+layout: false +---404L2Dwidget.init({pluginRootPath:\"live2dw/\",pluginJsPath:\"lib/\",pluginModelPath:\"assets/ Relative)\",tagMode:!1,log:!1,model:{jsonPath:\"/live2dw/assets/shizuku.model.json\"},display:{position:\"left\",width:100,height:180},mobile:{show:!1},react:{opacityDefault:.7}})"},{"title":"books","date":"2020-03-16T01:27:13.000Z","updated":"2020-03-16T01:27:13.538Z","comments":true,"path":"books/index.html","permalink":"https://qikaile.tk/books/index.html","excerpt":"","text":""},{"title":"关于我","date":"2020-03-13T16:00:00.000Z","updated":"2020-03-17T02:00:59.227Z","comments":false,"path":"about/index.html","permalink":"https://qikaile.tk/about/index.html","excerpt":"","text":"“心静思远，志行千里。”基础信息GitHub：https://github.com/Qikaile坐标：南京专业技能Python兴趣爱好电影更新日志2020.03.14 - Hello World"},{"title":"文章分类","date":"2020-03-14T06:29:13.000Z","updated":"2020-03-14T06:30:09.378Z","comments":false,"path":"categories/index.html","permalink":"https://qikaile.tk/categories/index.html","excerpt":"","text":""},{"title":"links","date":"2020-03-15T09:31:40.000Z","updated":"2020-03-15T09:31:40.956Z","comments":true,"path":"links/index.html","permalink":"https://qikaile.tk/links/index.html","excerpt":"","text":""},{"title":"gallery","date":"2020-03-15T02:22:04.000Z","updated":"2020-03-15T02:22:04.580Z","comments":true,"path":"gallery/index.html","permalink":"https://qikaile.tk/gallery/index.html","excerpt":"","text":""},{"title":"photos","date":"2020-03-16T01:31:44.000Z","updated":"2020-03-16T01:31:44.855Z","comments":true,"path":"photos/index.html","permalink":"https://qikaile.tk/photos/index.html","excerpt":"","text":""},{"title":"movies","date":"2020-03-15T09:32:24.000Z","updated":"2020-03-15T09:32:24.547Z","comments":true,"path":"movies/index.html","permalink":"https://qikaile.tk/movies/index.html","excerpt":"","text":""},{"title":"标签","date":"2020-03-14T06:25:44.000Z","updated":"2020-03-16T06:41:11.758Z","comments":false,"path":"tags/index.html","permalink":"https://qikaile.tk/tags/index.html","excerpt":"","text":""},{"title":"top","date":"2020-03-16T01:26:32.000Z","updated":"2020-03-16T01:26:32.136Z","comments":true,"path":"top/index.html","permalink":"https://qikaile.tk/top/index.html","excerpt":"","text":""},{"title":"","date":"2020-03-20T01:45:36.104Z","updated":"2020-03-20T01:45:36.104Z","comments":true,"path":"google1e8cb7831c21a106.html","permalink":"https://qikaile.tk/google1e8cb7831c21a106.html","excerpt":"","text":"google-site-verification: google1e8cb7831c21a106.html"}],"posts":[{"title":"Hexo搭建个人博客系列：主题美化篇","slug":"hexo-theme-beautify","date":"2020-03-18T16:00:00.000Z","updated":"2020-03-19T02:09:45.090Z","comments":true,"path":"archives/18b3b16a.html","link":"","permalink":"https://qikaile.tk/archives/18b3b16a.html","excerpt":"本文介绍了在Next主题的基础上进一步对博客进行美化的方案，主要包括:在文章末尾添加结束标记修改侧边栏的位置到左边添加不同类型的动态背景效果添加 live2d 看板娘为布局元素添加边缘弹性摆动效果个性化回到顶部按钮添加不同类型的鼠标点击特效评论区输入打字礼花特效读者可以根据需要选择其中喜欢的方案应用到站点博客中。","text":"本文介绍了在Next主题的基础上进一步对博客进行美化的方案，主要包括:在文章末尾添加结束标记修改侧边栏的位置到左边添加不同类型的动态背景效果添加 live2d 看板娘为布局元素添加边缘弹性摆动效果个性化回到顶部按钮添加不同类型的鼠标点击特效评论区输入打字礼花特效读者可以根据需要选择其中喜欢的方案应用到站点博客中。修改博客字体在 Google Fonts 上找到心仪的字体，然后在主题配置文件中为不同的应用场景配置字体：themes\\next\\_config.yml123456789101112131415161718192021222324252627282930font: enable: true # 外链字体库地址，例如 //fonts.googleapis.com (默认值) host: # 全局字体，应用在 body 元素上 global: external: true family: Monda # 标题字体 (h1, h2, h3, h4, h5, h6) headings: external: true family: Roboto Slab # 文章字体 posts: external: true family: # Logo 字体 logo: external: true family: # 代码字体，应用于 code 以及代码块 codes: external: true family:文章页末美化为标签添加图标默认情况下标签前缀是 # 字符，用户可以通过修改主题源码将标签的字符前缀改为图标前缀，更改后效果如下：在文章布局模板中找到文末标签相关代码段，将 # 换成 &lt;i class=&quot;fa fa-tags&quot;&gt;&lt;/i&gt; 即可：themes\\next\\layout\\_macro\\post.swig1234567891011 &lt;footer class=\"post-footer\"&gt; &#123;% if post.tags and post.tags.length and not is_index %&#125; &lt;div class=\"post-tags\"&gt; &#123;% for tag in post.tags %&#125;- &lt;a href=\"&#123;&#123; url_for(tag.path) &#125;&#125;\" rel=\"tag\"&gt;# &#123;&#123; tag.name &#125;&#125;&lt;/a&gt;+ &lt;a href=\"&#123;&#123; url_for(tag.path) &#125;&#125;\" rel=\"tag\"&gt;&lt;i class=\"fa fa-tags\"&gt;&lt;/i&gt; &#123;&#123; tag.name &#125;&#125;&lt;/a&gt; &#123;% endfor %&#125; &lt;/div&gt; &#123;% endif %&#125; ... &lt;/footer&gt;Next中使用 FontAwesome 作为图标库，用户可以在 FontAwesome 上找到心仪的图标来替换标签的字符前缀。添加结束标记本章节参考 asdfv1929 | Hexo NexT主题内给每篇文章后添加结束标语在文末添加结束标记，效果如下：新建布局模板文件 post-end-tag.swig，添加如下代码：themes\\next\\layout\\_macro\\post-end-tag.swig123456789&lt;div&gt; &#123;% if not is_index %&#125; &lt;div style=\"text-align:center;color:#bfbfbf;font-size:16px;\"&gt; &lt;span&gt;-------- 本文结束 &lt;/span&gt; &lt;i class=\"fa fa-&#123;&#123; config.post_end_tag.icon &#125;&#125;\"&gt;&lt;/i&gt; &lt;span&gt; 感谢阅读 --------&lt;/span&gt; &lt;/div&gt; &#123;% endif %&#125;&lt;/div&gt;在文章布局模板中添加如下代码：themes\\next\\layout\\_macro\\post123456789101112131415&#123;#####################&#125;&#123;### END POST BODY ###&#125;&#123;#####################&#125;+ &#123;% if config.post_end_tag.enabled and not is_index %&#125;+ &lt;div&gt;+ &#123;% include 'post-end-tag.swig' %&#125;+ &lt;/div&gt;+ &#123;% endif %&#125;&#123;% if theme.wechat_subscriber.enabled and not is_index %&#125; &lt;div&gt; &#123;% include 'wechat-subscriber.swig' %&#125; &lt;/div&gt;&#123;% endif %&#125;在站点配置文件末尾添加如下代码：_config.yml123post_end_tag: enabled: true # 是否开启文末的本文结束标记 icon: paw # 结束标记之间的图标重启服务器后即可在文末看到结束标记。页面加载进度条当网络不好的时候可能会在打开站点或跳转文章时出现短暂的白屏，此时如果能有加载进度提示将会提高用户操作体验。在根目录下执行以下命令安装相关依赖：1$ git clone https://github.com/theme-next/theme-next-pace themes/next/source/lib/pace在主题配置文件中设置 pace: true。默认提供了多种主题的进度条加载样式，有顶部提示的，有中间提示的，还有全页面遮挡提示的，个人认为默认的进度条效果就恰如其当，既能够在页面空白的时候起到加载作用，也不会因为太过花里胡哨而喧宾夺主，尤其是当你如果使用了不蒜子的站点访问统计的功能的时候，常常会遇到所有资源都加载完毕而不蒜子还在等待响应，如果这个时候在页面较显眼的位置出现一个停滞不前的进度条，很让人抓狂。侧边栏放左边受 猪猪侠的博客 所启发，萌生了想把主题侧边栏放在左侧的想法。Next主题各系列中只有Pisces和Gemini支持通过主题配置文件来将侧边栏置于左侧或右侧，而Muse和Mist则需要深度修改源码才能实现改变侧边栏位置。在自定义样式文件中添加如下规则：themes\\next\\source\\css\\_custom\\custom.styl1234567.sidebar-toggle &#123; left: 30px;&#125;.sidebar &#123; left: 0px;&#125;修改动效脚本代码：themes\\next\\source\\js\\src\\motion.js1234567891011121314151617181920$(document) .on('sidebar.isShowing', function() &#123; NexT.utils.isDesktop() &amp;&amp; $('body').velocity('stop').velocity(- &#123;paddingRight: SIDEBAR_WIDTH&#125;,+ &#123;paddingLeft: SIDEBAR_WIDTH&#125;, SIDEBAR_DISPLAY_DURATION ); &#125;) .on('sidebar.isHiding', function() &#123; &#125;); ... hideSidebar: function() &#123;- NexT.utils.isDesktop() &amp;&amp; $('body').velocity('stop').velocity(&#123;paddingRight: 0&#125;);+ NexT.utils.isDesktop() &amp;&amp; $('body').velocity('stop').velocity(&#123;paddingLeft: 0&#125;); this.sidebarEl.find('.motion-element').velocity('stop').css('display', 'none'); this.sidebarEl.velocity('stop').velocity(&#123;width: 0&#125;, &#123;display: 'none'&#125;); sidebarToggleLines.init(); ...&#125;如此以来就可以将侧边栏放置在左边了，但当窗口宽度缩小到991px之后会出现样式错误：侧边栏收缩消失但是页面左侧仍留有空白间距，此时修改如下代码即可：themes\\next\\source\\css\\_common\\scaffolding\\base.styl1234567891011121314body &#123; position: relative; // Required by scrollspy font-family: $font-family-base; font-size: $font-size-base; line-height: $line-height-base; color: $text-color; background: $body-bg-color;- +mobile() &#123; padding-left: 0 !important; &#125;- +tablet() &#123; padding-left: 0 !important; &#125; + +mobile() &#123; padding-right: 0 !important; &#125;+ +tablet() &#123; padding-right: 0 !important; &#125; +desktop-large() &#123; font-size: $font-size-large; &#125;&#125;添加动态背景Next主题可以通过安装插件快速为站点添加不同效果的动态背景。粒子漂浮聚合应用效果如下图：该功能由 theme-next-canvas-nest 插件提供，在根目录下执行如下命令：1$ git clone https://github.com/theme-next/theme-next-canvas-nest themes/next/source/lib/canvas-nest然后在主题配置文件中设置 canvas_nest: true 即可。Next v6.5.0 及以上版本支持更多的自定义选项：themes\\next\\_config.yml1234567canvas_nest: enable: true onmobile: true # 是否在移动端显示 color: '0,0,255' # 动态背景中线条的 RGB 颜色 opacity: 0.5 # 动态背景中线条透明度 zIndex: -1 # 动态背景的 z-index 属性值 count: 99 # 动态背景中线条数量Three 三维动效theme-next-three 插件提供了三个类型的背景动效，应用效果如下：three-wavescanvas-linescanvas-sphere在根目录下执行如下命令安装相关依赖：1$ git clone https://github.com/theme-next/theme-next-three themes/next/source/lib/three然后在主题配置文件中设置开启对应的动效选项即可。themes\\next\\_config.yml12345678# JavaScript 3D library.# Dependencies: https://github.com/theme-next/theme-next-three# three_wavesthree_waves: true# canvas_linescanvas_lines: false# canvas_spherecanvas_sphere: false个人认为在站点中添加动态背景并没有实际的意义，只会凭空增加页面内存占用及CPU消耗，所以本站没有添加任何动态背景。随机三角丝带该功能由 Vue 作者 尤雨溪 首创。本章节中核心代码来源于 DIYgod 编写的 sagiri 主题。点击下方按钮下载相应的脚本，并置于 themes\\next\\source\\js\\ 目录下：随机三角丝带在主题自定义布局文件中添加以下代码：themes\\next\\layout\\_custom\\custom.swig123456789101112131415&#123;# 随机三角丝带背景 #&#125;&#123;% if theme.evanyou %&#125; &lt;canvas id=\"evanyou\"&gt;&lt;/canvas&gt; &lt;style&gt; #evanyou &#123; position: fixed; width: 100%; height: 100%; top: 0; left: 0; z-index: -1; &#125; &lt;/style&gt; &lt;script src=\"/js/evan-you.js\"&gt;&lt;/script&gt;&#123;% endif %&#125;如果 custom.swig 文件不存在，需要手动新建并在布局页面中 body 末尾引入：themes\\next\\layout\\_layout.swig12345678 ... &#123;% include '_third-party/exturl.swig' %&#125; &#123;% include '_third-party/bookmark.swig' %&#125; &#123;% include '_third-party/copy-code.swig' %&#125;+ &#123;% include '_custom/custom.swig' %&#125; &lt;/body&gt; &lt;/html&gt;在主题配置文件中添加以下代码：themes\\next\\_config.yml12# colorful trilateral riband backgroundevanyou: true如果从本地加载JS脚本速度较慢，可以考虑将脚本放到CDN上再引入。添加看板娘本章节部分内容参考 FJKang | 添加一个萌物该功能由 hexo-helper-live2d 插件支持，效果如下图：在站点根目录下执行以下命令安装依赖：1$ npm install --save hexo-helper-live2d在站点配置文件中添加以下下配置项_config.yml123456789101112131415161718192021222324252627282930# Live2D# https://github.com/EYHN/hexo-helper-live2dlive2d: enable: true pluginRootPath: live2dw/ pluginJsPath: lib/ pluginModelPath: assets/ Relative) # 脚本加载源 scriptFrom: local # 默认从本地加载脚本 # scriptFrom: jsdelivr # 从 jsdelivr CDN 加载脚本 # scriptFrom: unpkg # 从 unpkg CDN 加载脚本 # scriptFrom: https://cdn.jsdelivr.net/npm/live2d-widget@3.x/lib/L2Dwidget.min.js # 从自定义地址加载脚本 tagMode: false # 只在有 &#123;&#123; live2d() &#125;&#125; 标签的页面上加载 / 在所有页面上加载 log: false # 是否在控制台打印日志 # 选择看板娘模型 model: use: live2d-widget-model-shizuku # npm package的名字 # use: wanko # /live2d_models/ 目录下的模型文件夹名称 # use: ./wives/wanko # 站点根目录下的模型文件夹名称 # use: https://cdn.jsdelivr.net/npm/live2d-widget-model-wanko@1.0.5/assets/wanko.model.json # 自定义网络数据源 display: position: left # 显示在左边还是右边 width: 100 # 宽度 height: 180 # 高度 mobile: show: false react: opacityDefault: 0.7 # 默认透明度更多配置参数请查看 L2Dwidget | live2d-widget.js此时重启服务器暂时还看不到看板娘，需要手动下载或安装模型资源。可以从 hexo live2d 模型预览 里找到你喜欢的角色，然后根据 live2d-widget-models 中提供的方法来下载模型数据.例如通过以下命令下载模型 shizuku：1$ npm install live2d-widget-model-shizuku因为修改了站点配置文件，所以需要重启服务器才能预览模型效果。如果设置了 live2d.tagMode: true，则可以在指定页面中插入以下标签：1&#123;&#123; live2d() &#125;&#125;只有拥有该标签的页面才会渲染live2d模型，这样以来就可以精确控制在哪些页面上显示看板娘了。如果只想在一级菜单页面上显示看板娘，可以在Header模板中添加以下代码：themes\\next\\layout\\_partials\\header\\index.swig123+ &#123;% if is_index %&#125;+ &#123;&#123; live2d() &#125;&#125;+ &#123;% endif %&#125;个人认为在文章内出现看板娘将会影响读者注意力的集中，毕竟一篇博客里最重要的是内容，而不是这些花里胡哨转移注意力的东西。所以本站只在一级菜单页面添加了看板娘，文章页面则保持极致精简的阅读体验。经过测试发现 live2d.mobile.show: false 并没有生效，暂时没有找到好的解决方法，参考 EYHN/hexo-helper-live2d Issues #12 后发现可以在自定义样式文件中添加以下代码来解决：themes/next/source/css/_custom/custom.styl12345678#live2dcanvas &#123; +mobile() &#123; display: none; &#125; +tablet() &#123; display: none; &#125;&#125;不要乱点不该点的地方，会生气的。边缘摆动效果在 猪猪侠的博客 里发现的这种特效，觉得挺有意思的，就从他Github上给扒过来了点击下方按钮下载脚本，并置于 themes\\next\\source\\js\\ 目录下：wobblewindow.js在主题自定义布局文件中添加以下代码：themes\\next\\layout\\_custom\\custom.swig12345678910111213141516171819202122232425262728293031323334353637383940414243&#123;# wobble窗口摆动特效 #&#125;&#123;% if theme.wobble %&#125; &lt;script src=\"/js/wobblewindow.js\"&gt;&lt;/script&gt; &lt;script&gt; //只在桌面版网页启用特效 if( window.innerWidth &gt; 768 )&#123; $(document).ready(function () &#123; &#123;% if theme.wobble.header %&#125; $('#header').wobbleWindow(&#123; radius: &#123;&#123; theme.wobble.radius &#125;&#125;, movementTop: false, movementLeft: false, movementRight: false, debug: false, &#125;); &#123;% endif %&#125; &#123;% if theme.wobble.sidebar %&#125; $('#sidebar').wobbleWindow(&#123; radius: &#123;&#123; theme.wobble.radius &#125;&#125;, movementLeft: false, movementTop: false, movementBottom: false, position: 'fixed', debug: false, &#125;); &#123;% endif %&#125; &#123;% if theme.wobble.footer %&#125; $('#footer').wobbleWindow(&#123; radius: &#123;&#123; theme.wobble.radius &#125;&#125;, movementBottom: false, movementLeft: false, movementRight: false, offsetX: &#123;&#123; theme.wobble.offset &#125;&#125;, position: 'absolute', debug: false, &#125;); &#123;% endif %&#125; &#125;); &#125; &lt;/script&gt;&#123;% endif %&#125;如果 custom.swig 文件不存在，需要手动新建并在布局页面中 body 末尾引入：themes\\next\\layout\\_layout.swig12345678 ... &#123;% include '_third-party/exturl.swig' %&#125; &#123;% include '_third-party/bookmark.swig' %&#125; &#123;% include '_third-party/copy-code.swig' %&#125;+ &#123;% include '_custom/custom.swig' %&#125; &lt;/body&gt; &lt;/html&gt;在自定义样式文件中添加以下样式：themes\\next\\source\\css\\_custom\\custom.styl1234567891011121314151617181920212223242526272829//窗口波动效果相关样式if hexo-config('wobble') &#123; .sidebar &#123; box-shadow: none; &#125; .wobbleTransparentBK&#123; background-color: rgba(0,0,0,0) !important; &#125; .wobbleTransparentLine&#123; border-color: rgba(0,0,0,0) !important; &#125; //Next.Muse中为Header和Footer添加背景色 #header, #footer &#123; background-color: rgb(245, 245, 245); &#125; //防止sidebar和footer同时开启动效时堆叠异常 #sidebar, header &#123; z-index: 1 !important; &#125; //防止挡住页末文章的阅读全文按钮 .main &#123; padding-bottom: 200px; &#125;&#125;Next.Muse主题方案中Header和Footer是没有背景色的，所以需要添加背景色后才能看出边缘摆动效果。另外，实现边缘摆动效果所需的 z-index 属性可能会导致元素堆叠异常，需要添加以上样式来矫正。在主题配置文件中添加以下代码：themes\\next\\_config.yml1234567# window wobllewobble: enable: true # 是否开启边缘波动效果 radius: 50 # 波动半径 sidebar: true # 开启侧边栏边缘摆动 header: true # 开启头部边缘摆动 footer: true # 开启脚部边缘摆动用户可以根据需要在配置文件中为选择开启边缘摆动效果的布局元素。刷新浏览器，然后将鼠标移动到布局边缘上尽情的挑逗它吧。如果从本地加载JS脚本速度较慢，可以考虑将脚本放到CDN上再引入。个性化回到顶部从 DIYgod的博客 里扒来的，效果如下：原理很简单，将 back-to-top 按钮添加图片背景，并添加CSS3动效即可。首先，找到自己喜欢的图片素材放到 source\\images\\ 目录下。你可以点击下方按钮下载本站所使用的小猫上吊素材（小猫咪这么可爱，当然要多放点孜然啦…） 下载图片然后在自定义样式文件中添加如下代码：themes\\next\\source\\css\\_custom\\custom.styl1234567891011121314151617181920//自定义回到顶部样式.back-to-top &#123; right: 60px; width: 70px; //图片素材宽度 height: 900px; //图片素材高度 top: -900px; bottom: unset; transition: all .5s ease-in-out; background: url(\"/images/scroll.png\"); //隐藏箭头图标 &gt; i &#123; display: none; &#125; &amp;.back-to-top-on &#123; bottom: unset; top: 100vh &lt; (900px + 200px) ? calc( 100vh - 900px - 200px ) : 0px; &#125;&#125;刷新浏览器即可预览效果。鼠标点击特效从各个站点里搜罗了以下四个比较常用的鼠标点击特效：礼花特效爆炸特效浮出爱心浮出文字点击下方按钮下载相应的脚本，并置于 themes\\next\\source\\js\\cursor\\ 目录下：礼花特效 爆炸特效 浮出爱心 浮出文字在主题自定义布局文件中添加以下代码：themes\\next\\layout\\_custom\\custom.swig123456789101112&#123;# 鼠标点击特效 #&#125;&#123;% if theme.cursor_effect == \"fireworks\" %&#125; &lt;script async src=\"/js/cursor/fireworks.js\"&gt;&lt;/script&gt;&#123;% elseif theme.cursor_effect == \"explosion\" %&#125; &lt;canvas class=\"fireworks\" style=\"position: fixed;left: 0;top: 0;z-index: 1; pointer-events: none;\" &gt;&lt;/canvas&gt; &lt;script src=\"//cdn.bootcss.com/animejs/2.2.0/anime.min.js\"&gt;&lt;/script&gt; &lt;script async src=\"/js/cursor/explosion.min.js\"&gt;&lt;/script&gt;&#123;% elseif theme.cursor_effect == \"love\" %&#125; &lt;script async src=\"/js/cursor/love.min.js\"&gt;&lt;/script&gt;&#123;% elseif theme.cursor_effect == \"text\" %&#125; &lt;script async src=\"/js/cursor/text.js\"&gt;&lt;/script&gt;&#123;% endif %&#125;如果 custom.swig 文件不存在，需要手动新建并在布局页面中 body 末尾引入：themes\\next\\layout\\_layout.swig12345678 ... &#123;% include '_third-party/exturl.swig' %&#125; &#123;% include '_third-party/bookmark.swig' %&#125; &#123;% include '_third-party/copy-code.swig' %&#125;+ &#123;% include '_custom/custom.swig' %&#125; &lt;/body&gt; &lt;/html&gt;在主题配置文件中添加以下代码：themes\\next\\_config.yml12# mouse click effect: fireworks | explosion | love | textcursor_effect: fireworks这样即可在配置文件中一键快速切换鼠标点击特效。如果从本地加载JS脚本速度较慢，可以考虑将脚本放到CDN上再引入。打字特效本章节参考 千灵夙赋 | Hexo 优化汇总 #31，原文出自 龙笑天下 | 给 WordPress 博客网站添加评论输入打字礼花及震动特效点击下方按钮下载相应的脚本，并置于 themes\\next\\source\\js\\ 目录下：打字特效在主题自定义布局文件中添加以下代码：themes\\next\\layout\\_custom\\custom.swig123456789&#123;# 打字特效 #&#125;&#123;% if theme.typing_effect %&#125; &lt;script src=\"/js/activate-power-mode.min.js\"&gt;&lt;/script&gt; &lt;script&gt; POWERMODE.colorful = &#123;&#123; theme.typing_effect.colorful &#125;&#125;; POWERMODE.shake = &#123;&#123; theme.typing_effect.shake &#125;&#125;; document.body.addEventListener('input', POWERMODE); &lt;/script&gt;&#123;% endif %&#125;如果 custom.swig 文件不存在，需要手动新建并在布局页面中 body 末尾引入：themes\\next\\layout\\_layout.swig12345678 ... &#123;% include '_third-party/exturl.swig' %&#125; &#123;% include '_third-party/bookmark.swig' %&#125; &#123;% include '_third-party/copy-code.swig' %&#125;+ &#123;% include '_custom/custom.swig' %&#125; &lt;/body&gt; &lt;/html&gt;在主题配置文件中添加以下代码：themes\\next\\_config.yml1234# typing effecttyping_effect: colorful: true # 礼花特效 shake: false # 震动特效如果从本地加载JS脚本速度较慢，可以考虑将脚本放到CDN上再引入。结束语本文记录了本站在Next的基础上的进阶美化方案，除了一些简单的样式修改外，还添加了一些由插件支持的高级动效，包括动态背景、看板娘、边缘摆动、鼠标点击和打字特效等。笔者认为，动效可以使得站点变有趣，但同时也会增加网页的资源消耗，以及影响用户的关注点，有时候会喧宾夺主适得其反，建议珍爱PC资源，合理使用动效。本文内容仅涉及到主题美化，也就是说仅使得网页看起来更好看或者更炫酷，但并没有使其功能上变得更强大。如果你希望为站点集成更高级的功能，可以关注本系列的后续文章：想要深度定制个性化站点，请参考本系列中的 。想要了解如何将站点部署到公网，请参考本系列中的参考链接- [asdfv1929 | Hexo NexT主题内给每篇文章后添加结束标语](https://asdfv1929.github.io/2018/01/28/add-the-end/) - [FJKang | 添加一个萌物](https://fjkang.github.io/2017/12/08/%E6%B7%BB%E5%8A%A0%E4%B8%80%E4%B8%AA%E8%90%8C%E7%89%A9/) - [尤雨溪的个人主页](http://evanyou.me/) - [DIYgod的博客](https://diygod.me/) - [猪猪侠的博客](https://www.ofind.cn/) - [千灵夙赋 | Hexo 优化汇总](https://qianling.pw/hexo-optimization/) - [龙笑天下 | 给 WordPress 博客网站添加评论输入打字礼花及震动特效](https://www.ilxtx.com/comment-input-effects.html)","categories":[{"name":"技术","slug":"技术","permalink":"https://qikaile.tk/categories/%E6%8A%80%E6%9C%AF/"},{"name":"博客","slug":"技术/博客","permalink":"https://qikaile.tk/categories/%E6%8A%80%E6%9C%AF/%E5%8D%9A%E5%AE%A2/"}],"tags":[{"name":"Hexo","slug":"Hexo","permalink":"https://qikaile.tk/tags/Hexo/"}]},{"title":"Hello World","slug":"hello-world","date":"2020-03-14T01:17:48.294Z","updated":"2020-03-15T12:48:58.100Z","comments":true,"path":"archives/4a17b156.html","link":"","permalink":"https://qikaile.tk/archives/4a17b156.html","excerpt":"","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub.Quick StartCreate a new post1$ hexo new \"My New Post\"More info: WritingRun server1$ hexo serverMore info: ServerGenerate static files1$ hexo generateMore info: GeneratingDeploy to remote sites1$ hexo deployMore info: Deployment","categories":[],"tags":[]}]}